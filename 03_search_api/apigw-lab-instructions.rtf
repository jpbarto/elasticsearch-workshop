{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww25400\viewh13380\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Lab 3 \'93API Gateway, Lambda, ElasticSearch\'94
\b0 \
\

\b 1 - Go to Lambda in the AWS Console
\b0 \
\
Click on \'93Create function\'94\
Select \'93Author from scratch\'94\
Give your function a name, i.e. \'93imageIndexQuery\'94\
Select Python 2.7 as the runtime\
Select \'93Use existing role\'94\
Use the previously created role\
Click on \'93Create function\'94\
\
Once complete, in the \'93Function code\'94 section, under \'93Code entry type\'94 click the drop-down menu and select \'91Upload a .ZIP file\'92\
(Browse to the GitHub repo and download code.zip to your computer)\
Select the code.zip file and then click save on the lambda function menu (top right)\
\
Once this is complete and you can see the code in the lambda_function code editor page, we have to enter your Elastic Search domain\'92s endpoint\
Replace the code in lambda_function with:\
\'97\'97\'97\'97\'97\'97\

\f1 from __future__ import print_function\
from pprint import pprint\
import boto3\
import json\
from elasticsearch import Elasticsearch, RequestsHttpConnection\
\
import urllib\
import json\
\
print('Loading function')\
\
def connectES(esEndPoint):\
    print ('Connecting to the ES Endpoint \{0\}'.format(esEndPoint))\
    try:\
        esClient = Elasticsearch(\
            hosts=[\{'host': esEndPoint, 'port': 443\}],\
            use_ssl=True,\
            verify_certs=True,\
            connection_class=RequestsHttpConnection)\
        return esClient\
    except Exception as E:\
        print("Unable to connect to \{0\}".format(esEndPoint))\
        print(E)\
        exit(3)\
\
def lambda_handler(event, context):\
    print("Received event: " + json.dumps(event, indent=2))\
    esClient = connectES(\'93<your endpoint>\'93)\
    content = esClient.search(index='metadata-store')\
    return \{\
       "statusCode" : 200,\
       "body": json.dumps(\{'input': event,'results': content\})\
\};\

\f0 \
\'97\'97\'97\'97\'97\'97\
Save the function again.\
\

\b 2 - Go to API Gateway in the AWS Console
\b0 \
\
\
Click on \'93Create API\'94\
Select \'93New API\'94\
Type a name for the API\
Select \'93Regional\'94 in the Endpoint Type drop down menu.\
Click on Create API\
Once the API has been created, you\'92ll go to the Resources view.\
Select the root resource, click on Actions\
Select \'93Create Method\'94 \
Select \'93POST\'94\
In the Setup section:\
Leave \'93Integration type\'94 as Lambda Function\
Check the box for \'93Use Lambda Proxy integration\'94\
Select \'93eu-west-1\'94  in the Lambda region drop down menu\
In the Lambda Function textbook, type the name of the lambda function we created above and select it.\
Click Save and then OK on the popup window\
\
Go ahead and test the function\
}